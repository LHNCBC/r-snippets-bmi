
options mprint;
options SYMBOLGEN;
options mlogic;




proc sql noprint; select States into :state1-:state51 from nwi388sl.List;


%let sqldf=/*enter the codes you are looking for. If you have more than 5 I recommend using a left join where you see SQLDF below-*/
;
%let sqldf_rx='';/*here you would link a file path to a list of NDCs*/
%let cohort_number='667';
%let start_year=1999;
%let end_year=2014;
%let last_state=51;
%let out_file=nwi388sl.cases_medicaid_&cohort_number;



%macro max_finder_ot(filelib, file, year, state, subtype, cohort_number,sqldf);
data log;
start_date=date();format start_date date.;
start_time=time();format start_time time.;
time_zone=symget('systimezone');
run;

data ot_file(keep= 
BENE_ID
STATE_CD
YR_NUM	
DIAG_CD_1	
DIAG_CD_2
rownum
);
set 
max&year..&file.&&STATE&a..&subtype&year;
rownum=_n_;
run;

proc sort data=ot_file;
by 
BENE_ID
YR_NUM
state_cd
rownum
;run;

proc sql; create table ot_file as
select * from ot_file where
bene_id>0;


proc transpose
data=ot_file
out=ot_file;
by
BENE_ID
YR_NUM
state_cd
rownum;
var
DIAG_CD_1	
DIAG_CD_2
;run;


proc sql; create table 
ot_file_tc as select * from 
ot_file_tc where col1 is not null;

proc sql;
create table ot_file as
select
bene_id,
YR_NUM,
State_cd,
"OT" as filea,
col1 as concept_code
from ot_file
where col1=&sqldf;/*this is where you would shift to a left join to a proper file that contains a list of DX codes*/
run;


proc append
force base=&out_file
Data=ot_file
;run;

proc datasets lib=work;
delete 
ot_file
;run;


data log;
set log;
cohort_name=symget('cohort_name');
cohort_number=symget('cohort_number');
obs=symget('sysnobs');
End_Time=time();format end_time time.;
run;

proc append FORCE
base=nwi388sl.precious_log
data=work.log;
run;
%mend;


%macro multi_finder_OT();
%do year=&start_year %to &end_year;
%do a=1 %to &last_state; 
%max_finder_ot(
filelib=MAX,
file=maxdata_,
year=&year,
state=&a,
subtype=_OT_,
sqldf=&sqldf,
cohort_number=&cohort_number
);run;
%end;
%end;
%mend;


%macro finder_ip_max(
sqldf,
year,
filename,
cohort_number
);




data ip_file(keep= 
BENE_ID
YR_NUM
DIAG_CD_1-DIAG_CD_9
state_cd
rownum
);
set 
max&year..MAXDATA_IP_&year;
rownum=_n_;
run;

proc sql; create table ip_file as
select * from ip_file where
bene_id>0;

proc sort data=ip_file;
by BENE_ID
YR_NUM
state_cd
rownum
;run;



proc transpose
data=ip_file
out=ip_file;
by
BENE_ID
YR_NUM
state_cd
rownum;
var
DIAG_CD_1
DIAG_CD_2
DIAG_CD_3
DIAG_CD_4
DIAG_CD_5
DIAG_CD_6
DIAG_CD_7
DIAG_CD_8
DIAG_CD_9
;
run;


proc sql;
create table ip_file as
select
bene_id,
YR_NUM,
State_cd,
"IP" as filea,
col1 as concept_code
from ip_file
where col1=&sqldf;
run;


proc append  force
base=&out_file
data=ip_file
;run;

%mend;

%macro multi_finder_IP();
%do year= &start_year %to &end_year;
%finder_ip_max(
sqldf=&sqldf,
year=&year,
filename="IP",
cohort_number=&cohort_number);
%end;
%mend;




%macro finder_lt_max(
sqldf,
year,
filename,
cohort_number
);




data lt_file(keep= 
BENE_ID
YR_NUM
DIAG_CD_1-DIAG_CD_5
state_cd
rownum
);
set 
max&year..MAXDATA_lt_&year;
rownum=_n_;
run;

proc sql; create table lt_file as
select * from lt_file where
bene_id>0;

proc sort data=lt_file;
by BENE_ID
YR_NUM
state_cd
rownum
;run;



proc transpose
data=lt_file
out=lt_file_t;
by
BENE_ID
YR_NUM
state_cd
rownum;
var
DIAG_CD_1
DIAG_CD_2
DIAG_CD_3
DIAG_CD_4
DIAG_CD_5;
run;


proc sql;
create table lt_file_t_c as
select
bene_id,
YR_NUM,
State_cd,
"LT" as filea,
col1 as concept_code
from lt_file_t
where col1=&sqldf;
run;


proc append  force
base=&out_file
data=lt_file_t_c
;run;

%mend;

%macro multi_finder_lt();
%do year= &start_year %to &end_year;
%finder_lt_max(
sqldf=&sqldf,
year=&year,
filename="LT",
cohort_number=&cohort_number);
%end;
%mend;


%macro max_finder_rx(filelib, file, year, state, subtype, cohort_number,sqldf);
data log;
start_date=date();format start_date date.;
start_time=time();format start_time time.;
time_zone=symget('systimezone');
run;

data rx_file(keep= 
BENE_ID
STATE_CD
YR_NUM	
NDC
rownum
);
set 
max&year..&file.&&STATE&a..&subtype&year;
rownum=_n_;
run;

proc sort data=rx_file;
by 
BENE_ID
YR_NUM
state_cd
rownum
;run;

proc sql; create table rx_file as
select * from rx_file where
bene_id>0;



proc sql;
create table rx_file_tc as
select
bene_id,
YR_NUM,
State_cd,
"RX" as filea,
NDC as concept_code
from rx_file
where NDC=&sqldf_rx;
run;


proc append
force base=&out_file
Data=rx_file_tc
;run;

proc datasets lib=work;
delete 
rx_file
rx_file_tc
;run;


data log;
set log;
cohort_name=symget('cohort_name');
cohort_number=symget('cohort_number');
obs=symget('sysnobs');
End_Time=time();format end_time time.;
run;

proc append FORCE
base=nwi388sl.precious_log
data=work.log;
run;
%mend;


%macro multi_finder_rx();
%do year=&start_year %to &end_year;
%do a=1 %to &last_state; 
%max_finder_rx(
filelib=MAX,
file=maxdata_,
year=&year,
state=&a,
subtype=_RX_,
sqldf=&sqldf_rx,
cohort_number=&cohort_number
);run;
%end;
%end;
%mend;




%multi_finder_lt();run;
%multi_finder_IP();run;
%multi_finder_OT();run;
%multi_finder_rx();run;
/*you can comment these out if you donâ€™t want to find codes from every file type*/

