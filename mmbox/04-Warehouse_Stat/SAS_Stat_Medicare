
options mprint;
options SYMBOLGEN;
options mlogic;

proc sql noprint; select Year into :year1-:year19 from &library..List;
proc sql noprint; select HCPCS into :file1-:file6 from &library..List; 
proc sql noprint; select Month into :month1-:month12 from&library..List;




/*
File Class: Revenue
  File Sourse: Medicare
*/
%macro HCPCS_epi(var,filelib,year,month,filename,job_name,library);

data log;job_name=symget('job_name');
start_date=date();format 
start_date date.;
start_time=time();format 
start_time time.;
time_zone=symget('systimezone');
run;

data event_index_r(
keep=&var);
set
&filelib&year..&filename.%sysfunc(putn(&month,z2.));
Type='PX';
concept_code=HCPCS_CD;
filea="&filename";
year=2010;/*declare year*/
run;

proc sql; create table  event_index_r as select * from  event_index_r where concept_code^='';run;

Proc append force 
base=&library..workingfile_r
Data=event_index_r;

data log;
set log;
Source_File=symget('filename');
obs=symget('sysnobs');
End_Time=time();format end_time time.;
run;

proc append FORCE base=&library..precious_log
data=work.log;run;

%mend;

/* Multi Year Config */
%macro multi_HCPCS_epi(
first_month,
last_month
);

%do month=&first_month %to &last_month;
%HCPCS_epi(
	var=bene_id clm_thru_dt type concept_code filea year,
	filelib=rif,
  library=,/*declare library*/
	year=2010,/*this is  single year*/
	month=&month,
	filename=&&&file&a.
	);run;
%END;
%mend;


%macro multi_multi_HCPCS_epi(first_file, last_file);
%do a=&first_file %to &last_file;
%multi_HCPCS_epi(
first_month=01,
last_month=12);run;

proc sql;
create table 
test_r as 
select
count(distinct bene_id) as pt_cnt,
count(concept_code) as ev_cnt,
concept_code,
year,
filea,
type
from
&library..workingfile_r
group by
concept_code, year, filea,type;

proc append force 
base=&library..epi_Medicare_rev
data=test_r
;run;


proc datasets library=work;
delete 
test_r
workingfile_r
event_index_r
;run;
proc datasets library=&library;
delete
workingfile_r;run;
%end;
%mend;

%multi_multi_HCPCS_epi(
first_file=1,
last_file=6
);run;



/*
File Class: Claims
  File Sourse: Medicare
*/




proc sql noprint; select Year into :year1-:year19 from &library..List;
proc sql noprint; select HCPCS into :file1-:file6 from &library..List; 
proc sql noprint; select claims into :claims1-:claims6 from &library..list; 
proc sql noprint; select Month into :month1-:month12 from &library..List;

%macro claims_epi(by,var,filelib,year,month,filename,cohort_number,cohort_name,job_name);

%if &filename=INPATIENT_CLAIMS_ %then %let var=
fst_dgns_e_cd 
admtg_dgns_cd 
prncpal_dgns_cd 
icd_dgns_cd1-icd_dgns_cd25
 icd_prcdr_cd1-icd_prcdr_cd25
 ICD_DGNS_E_CD1-ICD_DGNS_E_CD12;
%if &filename=OUTPATIENT_CLAIMS_ %then %let var=
fst_dgns_e_cd 
prncpal_dgns_cd 
icd_dgns_cd1-icd_dgns_cd25 
icd_prcdr_cd1-icd_prcdr_cd25 
ICD_DGNS_E_CD1-ICD_DGNS_E_CD12;

%if &filename=SNF_CLAIMS_ %then %let var=
fst_dgns_e_cd 
admtg_dgns_cd 
prncpal_dgns_cd 
icd_dgns_cd1-icd_dgns_cd25 
icd_prcdr_cd1-icd_prcdr_cd25 
ICD_DGNS_E_CD1-ICD_DGNS_E_CD12;

%if &filename=HOSPICE_CLAIMS_ %then %let var=
fst_dgns_e_cd 
prncpal_dgns_cd 
icd_dgns_cd1-icd_dgns_cd25 
ICD_DGNS_E_CD1-ICD_DGNS_E_CD12;

%if &filename=HHA_CLAIMS_ %then %let var= 
fst_dgns_e_cd 
prncpal_dgns_cd 
icd_dgns_cd1-icd_dgns_cd25 
ICD_DGNS_E_CD1-ICD_DGNS_E_CD12;

%if &filename=BCARRIER_CLAIMS_ %then %let var= 
icd_dgns_cd1-icd_dgns_cd12 
PRNCPAL_DGNS_CD;


%if &filename=INPATIENT_CLAIMS_ %then 
%let SQL_VARs=
FST_DGNS_E_CD,PRNCPAL_DGNS_CD,ICD_DGNS_CD1,ICD_DGNS_CD10,ICD_DGNS_CD11,
ICD_DGNS_CD12,ICD_DGNS_CD13,ICD_DGNS_CD14,ICD_DGNS_CD15,ICD_DGNS_CD16,ICD_DGNS_CD17,ICD_DGNS_CD18,ICD_DGNS_CD19,ICD_DGNS_CD2,ICD_DGNS_CD20,ICD_DGNS_CD21,ICD_DGNS_CD22,ICD_DGNS_CD23,ICD_DGNS_CD24,ICD_DGNS_CD25,ICD_DGNS_CD3,ICD_DGNS_CD4,ICD_DGNS_CD5,ICD_DGNS_CD6,ICD_DGNS_CD7,ICD_DGNS_CD8,ICD_DGNS_CD9,ICD_DGNS_E_CD1,ICD_DGNS_E_CD10,ICD_DGNS_E_CD11,ICD_DGNS_E_CD12,ICD_DGNS_E_CD2,ICD_DGNS_E_CD3,ICD_DGNS_E_CD4,ICD_DGNS_E_CD5,ICD_DGNS_E_CD6,ICD_DGNS_E_CD7,ICD_DGNS_E_CD8,ICD_DGNS_E_CD9,ICD_PRCDR_CD1,ICD_PRCDR_CD10,ICD_PRCDR_CD11,ICD_PRCDR_CD12,ICD_PRCDR_CD13,ICD_PRCDR_CD14,ICD_PRCDR_CD15,ICD_PRCDR_CD16,ICD_PRCDR_CD17,ICD_PRCDR_CD18,ICD_PRCDR_CD19,ICD_PRCDR_CD2,ICD_PRCDR_CD20,ICD_PRCDR_CD21,
ICD_PRCDR_CD22,ICD_PRCDR_CD23,ICD_PRCDR_CD24,ICD_PRCDR_CD25,ICD_PRCDR_CD3,ICD_PRCDR_CD4,ICD_PRCDR_CD5,ICD_PRCDR_CD6,ICD_PRCDR_CD7,ICD_PRCDR_CD8,ICD_PRCDR_CD9,bene_id,&filename as filename,clm_id,ADMTG_DGNS_CD;

%if &filename=OUTPATIENT_CLAIMS_ %then 
%let SQL_VARs=
FST_DGNS_E_CD,PRNCPAL_DGNS_CD,ICD_DGNS_CD1,ICD_DGNS_CD10,ICD_DGNS_CD11,ICD_DGNS_CD12,ICD_DGNS_CD13,ICD_DGNS_CD14,ICD_DGNS_CD15,ICD_DGNS_CD16,ICD_DGNS_CD17,ICD_DGNS_CD18,ICD_DGNS_CD19,ICD_DGNS_CD2,ICD_DGNS_CD20,ICD_DGNS_CD21,ICD_DGNS_CD22,ICD_DGNS_CD23,ICD_DGNS_CD24,ICD_DGNS_CD25,ICD_DGNS_CD3,ICD_DGNS_CD4,ICD_DGNS_CD5,ICD_DGNS_CD6,ICD_DGNS_CD7,ICD_DGNS_CD8,ICD_DGNS_CD9,ICD_DGNS_E_CD1,ICD_DGNS_E_CD10,ICD_DGNS_E_CD11,ICD_DGNS_E_CD12,ICD_DGNS_E_CD2,ICD_DGNS_E_CD3,ICD_DGNS_E_CD4,ICD_DGNS_E_CD5,ICD_DGNS_E_CD6,ICD_DGNS_E_CD7,ICD_DGNS_E_CD8,ICD_DGNS_E_CD9,ICD_PRCDR_CD1,ICD_PRCDR_CD10,ICD_PRCDR_CD11,ICD_PRCDR_CD12,ICD_PRCDR_CD13,ICD_PRCDR_CD14,ICD_PRCDR_CD15,ICD_PRCDR_CD16,ICD_PRCDR_CD17,ICD_PRCDR_CD18,ICD_PRCDR_CD19,ICD_PRCDR_CD2,ICD_PRCDR_CD20,ICD_PRCDR_CD21,ICD_PRCDR_CD22,ICD_PRCDR_CD23,ICD_PRCDR_CD24,ICD_PRCDR_CD25,ICD_PRCDR_CD3,ICD_PRCDR_CD4,ICD_PRCDR_CD5,ICD_PRCDR_CD6,ICD_PRCDR_CD7,ICD_PRCDR_CD8,ICD_PRCDR_CD9, bene_id,&filename as filename,clm_id;

%if &filename=SNF_CLAIMS_ %then 
%let SQL_VARs=
FST_DGNS_E_CD,PRNCPAL_DGNS_CD,ICD_DGNS_CD1,ICD_DGNS_CD10,ICD_DGNS_CD11,ICD_DGNS_CD12,ICD_DGNS_CD13,ICD_DGNS_CD14,ICD_DGNS_CD15,ICD_DGNS_CD16,ICD_DGNS_CD17,ICD_DGNS_CD18,ICD_DGNS_CD19,ICD_DGNS_CD2,ICD_DGNS_CD20,ICD_DGNS_CD21,
ICD_DGNS_CD22,ICD_DGNS_CD23,ICD_DGNS_CD24,ICD_DGNS_CD25,ICD_DGNS_CD3,ICD_DGNS_CD4,ICD_DGNS_CD5,ICD_DGNS_CD6,ICD_DGNS_CD7,ICD_DGNS_CD8,ICD_DGNS_CD9,ICD_DGNS_E_CD1,ICD_DGNS_E_CD10,ICD_DGNS_E_CD11,ICD_DGNS_E_CD12,ICD_DGNS_E_CD2,ICD_DGNS_E_CD3,ICD_DGNS_E_CD4,ICD_DGNS_E_CD5,ICD_DGNS_E_CD6,ICD_DGNS_E_CD7,ICD_DGNS_E_CD8,ICD_DGNS_E_CD9,ICD_PRCDR_CD1,ICD_PRCDR_CD10,ICD_PRCDR_CD11,ICD_PRCDR_CD12,ICD_PRCDR_CD13,ICD_PRCDR_CD14,ICD_PRCDR_CD15,ICD_PRCDR_CD16,ICD_PRCDR_CD17,ICD_PRCDR_CD18,ICD_PRCDR_CD19,ICD_PRCDR_CD2,ICD_PRCDR_CD20,ICD_PRCDR_CD21,
ICD_PRCDR_CD22,ICD_PRCDR_CD23,ICD_PRCDR_CD24,ICD_PRCDR_CD25,ICD_PRCDR_CD3,ICD_PRCDR_CD4,ICD_PRCDR_CD5,ICD_PRCDR_CD6,ICD_PRCDR_CD7,ICD_PRCDR_CD8,
ICD_PRCDR_CD9,bene_id,&filename as filename,clm_id,ADMTG_DGNS_CD;

%if &filename=HOSPICE_CLAIMS_ %then 
%let SQL_VARs=
FST_DGNS_E_CD,PRNCPAL_DGNS_CD,ICD_DGNS_CD1,ICD_DGNS_CD10,ICD_DGNS_CD11,
ICD_DGNS_CD12,ICD_DGNS_CD13,ICD_DGNS_CD14,ICD_DGNS_CD15,ICD_DGNS_CD16,ICD_DGNS_CD17,ICD_DGNS_CD18,ICD_DGNS_CD19,ICD_DGNS_CD2,ICD_DGNS_CD20,ICD_DGNS_CD21,ICD_DGNS_CD22,ICD_DGNS_CD23,ICD_DGNS_CD24,ICD_DGNS_CD25,ICD_DGNS_CD3,ICD_DGNS_CD4,ICD_DGNS_CD5,ICD_DGNS_CD6,ICD_DGNS_CD7,ICD_DGNS_CD8,ICD_DGNS_CD9,ICD_DGNS_E_CD1,ICD_DGNS_E_CD10,ICD_DGNS_E_CD11,ICD_DGNS_E_CD12,ICD_DGNS_E_CD2,ICD_DGNS_E_CD3,ICD_DGNS_E_CD4,ICD_DGNS_E_CD5,ICD_DGNS_E_CD6,ICD_DGNS_E_CD7,ICD_DGNS_E_CD8,ICD_DGNS_E_CD9,bene_id,&filename as filename,clm_id;

%if &filename=HHA_CLAIMS_ %then 
%let SQL_VARs=
FST_DGNS_E_CD,PRNCPAL_DGNS_CD,ICD_DGNS_CD1,ICD_DGNS_CD10,ICD_DGNS_CD11,ICD_DGNS_CD12,ICD_DGNS_CD13,ICD_DGNS_CD14,ICD_DGNS_CD15,ICD_DGNS_CD16, ICD_DGNS_CD17,ICD_DGNS_CD18,ICD_DGNS_CD19,ICD_DGNS_CD2,ICD_DGNS_CD20,
ICD_DGNS_CD21,ICD_DGNS_CD22,ICD_DGNS_CD23,ICD_DGNS_CD24,
ICD_DGNS_CD25,ICD_DGNS_CD3,ICD_DGNS_CD4,ICD_DGNS_CD5,ICD_DGNS_CD6,ICD_DGNS_CD7,ICD_DGNS_CD8,ICD_DGNS_CD9,ICD_DGNS_E_CD1,ICD_DGNS_E_CD10,ICD_DGNS_E_CD11,ICD_DGNS_E_CD12,ICD_DGNS_E_CD2,ICD_DGNS_E_CD3,ICD_DGNS_E_CD4,ICD_DGNS_E_CD5,
ICD_DGNS_E_CD6,ICD_DGNS_E_CD7,ICD_DGNS_E_CD8,ICD_DGNS_E_CD9,
bene_id,&filename as filename,clm_id;

%if &filename=BCARRIER_CLAIMS_ %then 
%let SQL_VARs= PRNCPAL_DGNS_CD,ICD_DGNS_CD1,ICD_DGNS_CD10,ICD_DGNS_CD11,ICD_DGNS_CD12,ICD_DGNS_CD2,ICD_DGNS_CD3,ICD_DGNS_CD4,ICD_DGNS_CD5,ICD_DGNS_CD6,ICD_DGNS_CD7,ICD_DGNS_CD8,ICD_DGNS_CD9,bene_id, &filename as filename,clm_id;


data &library..transpose_index(
keep=&by &var);
set
&filelib&year..&filename.%sysfunc(putn(&month,z2.));
run;

proc sort data=&library..transpose_index;
by &by;
run;

proc transpose 
data=&library..transpose_index
out=&library..transpose_index;
by &by;
var &var;
run;

proc sql; 
create table &library..transpose_index as
select * from &library..transpose_index
where col1^='';run;

	data &library..transpose_index;
	set &library..transpose_index;
	if _Name_=:'ADMTG_DGNS_CD' then Type='DX';
	if _Name_=:'PRNCPAL_DGNS_CD' then Type='DX';
	if _Name_=:'ICD_DGNS_CD' then Type='DX';
	if _Name_=:'ICD_PRCDR_CD' then Type='PX';
	if _NAME_=:'ICD_DGNS_E_CD' then Type='DX';
	if _Name_=:'FST_DGNS_E_CD' then Type='PX';
	run;

proc sql;
create table 
&library..transpose_index
as select 
bene_id,
symget('filename') as filea,
col1 as concept_code,
type,
&year as year
from
&library..transpose_index;

proc append force 
base= &library..workingfile_c
data= &library..transpose_index
;run;


%mend;

%macro multi_epi(first_month,last_month);
%do month=&first_month %to &last_month;
%claims_epi(
by=clm_id bene_id clm_thru_dt,
library=,/*declare library*/
filelib=rif,
year=2010,/*single year*/
month=&month,
filename=&&&claims&a.
);run;
%end;
%mend;

%macro multi_multi_epi(first_file, last_file);
%do a=&first_file %to &last_file;
%multi_epi(
first_month=01,
last_month=12
);
run;


proc datasets library=&library;
delete 
transpose_index
;run;

proc sql;
create table 
&library..workingfile_c1 as 
select
count(distinct bene_id) as pt_cnt,
count(concept_code) as ev_cnt,
concept_code,
year,
filea
from
&library..workingfile_c
group by
concept_code, year, filea;

proc append force 
base=&library..epi_medicare_claims
data=&library..workingfile_c1
;run;

proc datasets 

&library;
delete 
workingfile_c
workingfile_c1
;run;

%end;
%mend;

%multi_multi_epi(
first_file=1,
last_file=5,
);run;

/*File Class: RX
  File Sourse: Medicare*/




proc sql noprint; select Year into :year1-:year19 from &library..List;
proc sql noprint; select Month into :month1-:month12 from &library..List;

%macro rx_epi(var,filelib,year,month,filename,job_name, library);

data log;job_name=symget('job_name');
start_date=date();format 
start_date date.;
start_time=time();format 
start_time time.;
time_zone=symget('systimezone');
run;


data event_index_rx(
keep=&var);
set
&filelib&year..&filename&year._%sysfunc(putn(&month,z2.));
Type='RX';
filea="&filename";
year=2010;/*single year*/
run;

Proc append force 
base=&library..workingfile_rx
Data=event_index_rx;

data log;
set log;
Source_File=symget('filename');
obs=symget('sysnobs');
End_Time=time();format end_time time.;
run;

proc append FORCE base=&library..precious_log
data=work.log;run;



%mend;

%macro multi_rx_epi(first_month,last_month);

%do month=&first_month %to &last_month;
%rx_epi (
	var=bene_id prod_srvc_id year type filea,
	filelib=pde,
  library=,/*declare library*/
	year=2010,/*Single Year*/
	month=&month,
	filename=PDE_demo_
	);run;
%END;
%mend;


%macro multi_multi_rx_epi();
%multi_rx_epi(
first_month=01,
last_month=12);run;

/*this text block uses NDC to Clinical Drug Map- you don’t have to use this
proc sql;
create table 
&library..workingfile_rx
as 
select * from
&library..workingfile_rx
left join
&library..ndc_map_b
on
workingfile_rx.prod_srvc_id
=
ndc_map_b.prod_srvc_id
;*/

proc sql;
create table 
&library..workingfile_rx as 
select
count(distinct bene_id) as pt_cnt,
count(cdn) as ev_cnt,/*here you would prod_srvc_id if not using clinical drug translate*/
cdn as concept_code, /*here you would prod_srvc_id if not using clinical drug translate*/
year,
filea,
type
from
&library..workingfile_rx
group by
cdn, /*here you would prod_srvc_id if not using clinical drug translate*/ year, filea,type;

proc append force 
base=&library..epi_Medicare_rx
data=&library..workingfile_rx
;run;


proc datasets library=work;
delete 
workingfile_rx
event_index_rx
;run;
proc datasets library=&library;
delete
workingfile_rx
;run;
%mend;

%multi_multi_rx_epi();run;

